name: ci

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  ci:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [18]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3 # v3.3.0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3 # v3.6.0
        with:
          node-version: ${{ matrix.node }}
          # cache: 'pnpm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2 # v2.2.4
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3 # v3.2.6
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Run prettier format
        run: pnpm run format


      - name: Execute tests
        run: npm run test

      - name: Set environment variables
        run: |
          echo "PUBLIC_SUPABASE_URL= https://fnfeloobddyomdlepjjn.supabase.co" >> $GITHUB_ENV
          echo "PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZuZmVsb29iZGR5b21kbGVwampuIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODY2NDU5NjMsImV4cCI6MjAwMjIyMTk2M30.4Su4At0rgoeS1417sE6WUj5gHiMYsuVIQmKrhyooX34" >> $GITHUB_ENV

      - name: Build project
        run: npm run build

        
      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: "Deploy application"
        run: |
          prodRun=""
          if [[ ${GITHUB_REF} == "refs/heads/main" ]]; then
            prodRun="--prod"
          fi

          npx vercel --token ${VERCEL_TOKEN} $prodRun --confirm
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

        
     
